import * as helmet from 'helmet';
import { join } from 'path';
import * as hbs from 'hbs';
import { NestFactory } from '@nestjs/core';
import { NestExpressApplication } from '@nestjs/platform-express';
import { ValidationPipe } from '@nestjs/common';
import { SwaggerModule, DocumentBuilder } from '@nestjs/swagger';
import { AppModule } from './app.module';

async function bootstrap() {

  const app = await NestFactory.create<NestExpressApplication>(
    AppModule,
  );

  app.useStaticAssets(join(__dirname, '..', 'public'));
  app.setBaseViewsDir(join(__dirname, '..', 'views'));
  app.set('view engine', 'hbs');

  app.set('view engine', 'html');
  app.engine('html', require('hbs').__express);

  app.set('view options', { layout: 'layoutbase' });
  hbs.registerPartials(__dirname + '/views/partials', function () {});
  hbs.localsAsTemplateData(app);

  // auto generate API
  const APP_NAME = process.env.npm_package_name;
  const APP_VERSION = process.env.npm_package_version;
  const options = new DocumentBuilder()
    .setTitle(APP_NAME)
    .setDescription(`The ${APP_NAME} API (autogenerated)`)
    .setVersion(APP_VERSION)
    .addTag('swagger')
    .build();
  const document = SwaggerModule.createDocument(app, options);
  SwaggerModule.setup('swagger', app, document);

  // set up validation pipeline
  app.useGlobalPipes(
    new ValidationPipe({
      whitelist: true,
      transform: true,
      forbidNonWhitelisted: true,
      transformOptions: {
        enableImplicitConversion: true,
      },
    }),
  );

  // enable Cross-origin resource sharing (CORS)
  app.enableCors();

  // set security-related HTTP headers
  app.use(helmet());

  await app.listen(process.env.PORT);
}

bootstrap();
